import { __decorate } from "tslib";
import { CdkTableExporterModule } from 'cdk-table-exporter';
import { MatTableModule } from '@angular/material/table';
import { NgModule } from '@angular/core';
import { MatTableExporterDirective } from './mat-table-exporter.directive';
import * as ɵngcc0 from '@angular/core';
var MatTableExporterModule = /** @class */ (function () {
    function MatTableExporterModule() {
    }
MatTableExporterModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatTableExporterModule });
MatTableExporterModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatTableExporterModule_Factory(t) { return new (t || MatTableExporterModule)(); }, imports: [[
            MatTableModule,
            CdkTableExporterModule
        ]] });
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatTableExporterModule, { declarations: function () { return [MatTableExporterDirective]; }, imports: function () { return [MatTableModule,
        CdkTableExporterModule]; }, exports: function () { return [MatTableExporterDirective]; } }); })();
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatTableExporterModule, [{
        type: NgModule,
        args: [{
                declarations: [MatTableExporterDirective],
                imports: [
                    MatTableModule,
                    CdkTableExporterModule
                ],
                exports: [MatTableExporterDirective]
            }]
    }], function () { return []; }, null); })();
    return MatTableExporterModule;
}());
export { MatTableExporterModule };
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWF0LXRhYmxlLWV4cG9ydGVyLm1vZHVsZS5qcyIsInNvdXJjZXMiOlsibmc6L21hdC10YWJsZS1leHBvcnRlci9saWIvbWF0LXRhYmxlLWV4cG9ydGVyLm1vZHVsZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsT0FBTyxFQUFFLHNCQUFzQixFQUFFLE1BQU0sb0JBQW9CLENBQUM7QUFDNUQsT0FBTyxFQUFFLGNBQWMsRUFBRSxNQUFNLHlCQUF5QixDQUFDO0FBQ3pELE9BQU8sRUFBRSxRQUFRLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDekMsT0FBTyxFQUFFLHlCQUF5QixFQUFFLE1BQU0sZ0NBQWdDLENBQUM7O0FBVzNFO0FBQ2tCLElBRGxCO0FBQW9DLElBQUUsQ0FBQztJQUExQixzQkFBc0Isd0JBUmxDLFFBQVEsQ0FBQyxjQUNSLFlBQVksRUFBRSxDQUFDO3dCQUF5QixDQUFDLGNBQ3pDLE9BQU8sRUFBRSxrQkFDUCxjQUFjLGtCQUNkLHNCQUFzQixjQUN2QixjQUNELE9BQU8sRUFBRSxDQUFDO2NBQXlCLENBQUMsVUFDckMsQ0FBQztNQUNXLHNCQUFzQixDQUFJOzs7Ozs7Ozs7Ozs7OztnREFDdkM7QUFBQyxJQURxQyw2QkFBQztBQUN0QyxDQURzQyxBQUF2QyxJQUF1Qzs7QUFkQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBV0EsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBUkEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUNBLEFBQUEsQUFDQSxBQUNBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFDQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENka1RhYmxlRXhwb3J0ZXJNb2R1bGUgfSBmcm9tICdjZGstdGFibGUtZXhwb3J0ZXInO1xyXG5pbXBvcnQgeyBNYXRUYWJsZU1vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL21hdGVyaWFsL3RhYmxlJztcclxuaW1wb3J0IHsgTmdNb2R1bGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuaW1wb3J0IHsgTWF0VGFibGVFeHBvcnRlckRpcmVjdGl2ZSB9IGZyb20gJy4vbWF0LXRhYmxlLWV4cG9ydGVyLmRpcmVjdGl2ZSc7XHJcblxyXG5cclxuQE5nTW9kdWxlKHtcclxuICBkZWNsYXJhdGlvbnM6IFtNYXRUYWJsZUV4cG9ydGVyRGlyZWN0aXZlXSxcclxuICBpbXBvcnRzOiBbXHJcbiAgICBNYXRUYWJsZU1vZHVsZSxcclxuICAgIENka1RhYmxlRXhwb3J0ZXJNb2R1bGVcclxuICBdLFxyXG4gIGV4cG9ydHM6IFtNYXRUYWJsZUV4cG9ydGVyRGlyZWN0aXZlXVxyXG59KVxyXG5leHBvcnQgY2xhc3MgTWF0VGFibGVFeHBvcnRlck1vZHVsZSB7IH1cclxuIl19