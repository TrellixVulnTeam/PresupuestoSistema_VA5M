import { __decorate, __extends, __metadata } from "tslib";
import { Injectable } from '@angular/core';
import { XlsExporterService } from './xls-exporter.service';
import { MIME_EXCEL_XLSX } from '../../constants';
import * as i0 from "@angular/core";
import * as ɵngcc0 from '@angular/core';
var XlsxExporterService = /** @class */ (function (_super) {
    __extends(XlsxExporterService, _super);
    function XlsxExporterService() {
        return _super.call(this) || this;
    }
    // override
    XlsxExporterService.prototype.getMimeType = function () {
        return MIME_EXCEL_XLSX;
    };
    XlsxExporterService.ɵprov = i0.ɵɵdefineInjectable({ factory: function XlsxExporterService_Factory() { return new XlsxExporterService(); }, token: XlsxExporterService, providedIn: "root" });
    XlsxExporterService = __decorate([ __metadata("design:paramtypes", [])
    ], XlsxExporterService);
XlsxExporterService.ɵfac = function XlsxExporterService_Factory(t) { return new (t || XlsxExporterService)(); };
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(XlsxExporterService, [{
        type: Injectable,
        args: [{
                providedIn: 'root'
            }]
    }], function () { return []; }, null); })();
    return XlsxExporterService;
}(XlsExporterService));
export { XlsxExporterService };
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoieGxzeC1leHBvcnRlci5zZXJ2aWNlLmpzIiwic291cmNlcyI6WyJuZzovY2RrLXRhYmxlLWV4cG9ydGVyL2xpYi9zZXJ2aWNlcy9leHBvcnRlcnMveGxzeC1leHBvcnRlci5zZXJ2aWNlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSxPQUFPLEVBQUUsVUFBVSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQzNDLE9BQU8sRUFBRSxrQkFBa0IsRUFBRSxNQUFNLHdCQUF3QixDQUFDO0FBRTVELE9BQU8sRUFBRSxlQUFlLEVBQUUsTUFBTSxpQkFBaUIsQ0FBQztBQUNsRDs7QUFJQTtBQUE2RCxJQUFwQix1Q0FBa0I7QUFBQyxJQUUxRDtBQUdGLGVBRkksaUJBQU87QUFHUixJQUZELENBQUM7QUFDSCxJQUNFLFdBQVc7QUFDYixJQUFTLHlDQUFXLEdBQWxCO0FBQWMsUUFDWixPQUFPLGVBQWUsQ0FBQztBQUMzQixJQUFFLENBQUM7QUFDRjtBQUNnTSxJQVhwTCxtQkFBbUIsd0JBSC9CLFVBQVUsQ0FBQyxjQUNWLGxDQUVNO09BRkksRUFBRSxNQUFNLFVBQ25CLENBQUMsMUJBQzJDLE9BQWhDLG1CQUFtQixDQVUvQjs7Ozs7OztnREFDRDtBQUFDLDhCQW5CRDtBQUFFLENBa0JELEFBVkQsQ0FBeUMsa0JBQWtCLEdBVTFEOztBQWxCQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUVBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFLQSxBQUFBLEFBQUEsQUFFQSxBQUNBLEFBQUEsQUFDQSxBQUFBLEFBRUEsQUFBQSxBQUNBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQVRBLEFBQUEsQUFIQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFDQSxBQUFBLEFBVUEsQUFsQkEsQUFrQkEsQUFWQSxBQUFBLEFBQUEsQUFVQSxBQVZBLEFBQUEiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBJbmplY3RhYmxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcbmltcG9ydCB7IFhsc0V4cG9ydGVyU2VydmljZSB9IGZyb20gJy4veGxzLWV4cG9ydGVyLnNlcnZpY2UnO1xyXG5pbXBvcnQgeyBNaW1lIH0gZnJvbSAnLi4vLi4vbWltZSc7XHJcbmltcG9ydCB7IE1JTUVfRVhDRUxfWExTWCB9IGZyb20gJy4uLy4uL2NvbnN0YW50cyc7XHJcblxyXG5ASW5qZWN0YWJsZSh7XHJcbiAgcHJvdmlkZWRJbjogJ3Jvb3QnXHJcbn0pXHJcbmV4cG9ydCBjbGFzcyBYbHN4RXhwb3J0ZXJTZXJ2aWNlIGV4dGVuZHMgWGxzRXhwb3J0ZXJTZXJ2aWNlIHtcclxuXHJcbiAgY29uc3RydWN0b3IoKSB7XHJcbiAgICBzdXBlcigpO1xyXG4gIH1cclxuXHJcbiAgLy8gb3ZlcnJpZGVcclxuICBwdWJsaWMgZ2V0TWltZVR5cGUoKTogTWltZSB7XHJcbiAgICByZXR1cm4gTUlNRV9FWENFTF9YTFNYO1xyXG4gIH1cclxufVxyXG4iXX0=